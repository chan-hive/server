name: Build and Deploy

on:
    push:
        branches:
            - master
            - dev

jobs:
    build-and-deploy:
        runs-on: self-hosted
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1
              with:
                  persist-credentials: false

            - name: Cache nextjs build
              uses: actions/cache@v2
              with:
                  path: ${{ github.workspace }}/.next/cache
                  # Generate a new cache whenever packages or source files change.
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]sx?') }}
                  # If source files changed but packages didn't, rebuild from a prior cache.
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

            - name: Cache node_modules
              id: node-cache
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install and Build
              uses: actions/setup-node@v1
              with:
                  node-version: "14.x"

            - name: Install yarn
              run: |
                npm install -g yarn

            - name: Prepare package
              run: |
                yarn

            - name: Lint
              run: |
                yarn lint

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build, tag, and push image to Docker Hub
              env:
                  IMAGE_TAG: ${{ github.sha }}
                  DOCKER_BUILDKIT: 1
              run: |
                  docker build -t chanhive/server:$IMAGE_TAG .
                  docker build -t chanhive/server:latest .
                  docker push chanhive/server:$IMAGE_TAG
                  docker push chanhive/server:latest
